{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleSubmit","e","preventDefault","onSubmit","id","Math","floor","random","text","className","type","placeholder","name","onChange","target","ref","onClick","Todo","todos","completeTodo","removeTodo","deleteCheckBox","map","todo","index","isComplete","TodoList","setTodos","LOCAL_STORAGE_KEY","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","updatedTodos","filter","t","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA+CeA,MA7Cf,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBA,EAAEC,iBAEFb,EAAMc,SAAS,CACXC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGVC,EAAS,KAQb,OACI,sBAAMe,UAAU,YAAYN,SAAUH,EAAtC,SAEQ,qCACI,uBACIU,KAAK,OACLC,YAAY,aACZnB,MAAOC,EACPmB,KAAK,OACLH,UAAU,aACVI,SAdC,SAAAZ,GACjBP,EAASO,EAAEa,OAAOtB,QAcFuB,IAAKpB,IAET,wBAAQqB,QAAShB,EAAcS,UAAU,cAAzC,uB,OCZLQ,MAxBf,YAAoD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAE3BC,EAAiB,SAACjB,GACpBe,EAAaf,IAGjB,OAAOc,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKf,UAAWc,EAAKE,WAAa,oBAAsB,WAAxD,UACI,uBAAOf,KAAK,WAAWM,QAAS,kBAAIK,EAAeE,EAAKnB,OACxD,qBAAmBY,QAAS,kBAAIK,EAAeE,EAAKnB,KAApD,SACKmB,EAAKf,MADAe,EAAKnB,IAGf,qBAAKK,UAAU,QAAf,SACI,cAAC,IAAD,CACIO,QAAS,kBAAMI,EAAWG,EAAKnB,KAC/BK,UAAU,oBARmDe,OCgDlEE,MAvDf,WAAqB,IAAD,EACUpC,mBAAS,IADnB,mBACT4B,EADS,KACFS,EADE,KAGVC,EAAoB,sBA0C1B,OAxCA/B,qBAAU,WACN,IAAMgC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQL,IAEjDC,GACAF,EAASE,KAEd,IAEHhC,qBAAU,WACNmC,aAAaE,QAAQN,EAAmBE,KAAKK,UAAUjB,MACxD,CAACA,IA+BA,sBAAKT,UAAU,eAAf,UACI,4CACA,cAAC,EAAD,CAAUN,SA/BF,SAAAoB,GACZ,GAAKA,EAAKf,OAAQ,QAAQ4B,KAAKb,EAAKf,MAApC,CAIA,IAAM6B,EAAQ,CAAId,GAAJ,mBAAaL,IAE3BS,EAASU,OAyBL,cAAC,EAAD,CAAMnB,MAAOA,EAAOC,aAjBP,SAAAf,GACjB,IAAMkC,EAAepB,EAAMI,KAAI,SAAAC,GAI3B,OAHIA,EAAKnB,KAAOA,IACZmB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXI,EAASW,IAU2ClB,WArBrC,SAAAhB,GACfuB,GAAS,SAACJ,GAAD,OAAQA,EAAKgB,QAAO,SAAAC,GAAC,OAAIA,EAAEpC,KAAOA,WAqBvC,wBAAQK,UAAU,cAAcO,QATtB,WACdW,EAAS,KAQL,4BC1CGc,MARf,WACE,OACE,qBAAKhC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.96246e51.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    })\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 1000),\n            text: input\n        });\n\n        setInput('');\n\n    };\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    }\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            \n                <>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add a todo\"\n                        value={input}\n                        name=\"text\"\n                        className=\"todo-input\"\n                        onChange={handleChange}\n                        ref={inputRef}\n                    />\n                    <button onClick={handleSubmit} className=\"todo-button\">Add</button>\n                </>\n            \n        </form >\n    )\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\n\nfunction Todo({ todos, completeTodo, removeTodo }) {\n    \n    const deleteCheckBox = (id)=>{\n        completeTodo(id)\n    }\n \n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n            <input type=\"checkbox\" onClick={()=>deleteCheckBox(todo.id)} />\n            <div key={todo.id} onClick={()=>deleteCheckBox(todo.id)}>\n                {todo.text}\n            </div>\n            <div className='icons'>\n                <RiCloseCircleLine\n                    onClick={() => removeTodo(todo.id)}\n                    className='delete-icon'\n                />\n                \n                \n            </div>\n        </div>\n    ));\n};\n\nexport default Todo;\n","import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    const LOCAL_STORAGE_KEY = \"react-do-list-todos\";\n\n    useEffect(() => {\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n        if (storageTodos) {\n            setTodos(storageTodos)\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n    }, [todos]);\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n\n    const removeTodo = id => {\n        setTodos((todo)=>todo.filter(t => t.id !== id))\n    };\n\n    const completeTodo = id => {\n        const updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo;\n        })\n        setTodos(updatedTodos);\n    };\n    const deleteAll = () =>{\n        setTodos([]);\n    }\n    \n    return (\n        <div className=\"todo-context\">\n            <h1>To-Do List</h1>\n            <TodoForm onSubmit={addTodo} />\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}  />\n            <button className=\"todo-button\" onClick={deleteAll}>Delete All</button>\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}