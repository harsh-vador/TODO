{"version":3,"sources":["components/TodoForm.js","components/Todo.js","constants.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleSubmit","e","preventDefault","onSubmit","id","Math","floor","random","text","className","type","placeholder","name","onChange","target","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","deleteCheckBox","map","todo","index","isComplete","LOCAL_STORAGE_KEY","TodoList","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","validateinput","test","newTodos","updatedTodos","filter","t","todoId","newValue","prev","item","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.671d80a0.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 1000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder={props.edit ? \"Update Your Item\" : \"Add a Todo\"}\n        value={input}\n        name=\"text\"\n        className={props.edit ? \"todo-input edit\" : \"todo-input\"}\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button\n        onClick={handleSubmit}\n        className={props.edit ? \"todo-button edit\" : \"todo-button-add\"}\n      >\n        {props.edit ? \"Update\" : \"Add\"}\n      </button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  const deleteCheckBox = (id) => {\n    completeTodo(id);\n  };\n\n  return (\n    <>\n      {edit.id ? (\n        <TodoForm edit={edit} onSubmit={submitUpdate} />\n      ) : (\n        todos.map((todo, index) => (\n          <div\n            className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n            key={index}\n          >\n            <div className=\"todo\">\n              <input type=\"checkbox\" onClick={() => deleteCheckBox(todo.id)} />\n              <div\n                className=\"todo-content\"\n                key={todo.id}\n                onClick={() => deleteCheckBox(todo.id)}\n              >\n                {todo.text}\n              </div>\n            </div>\n            <div className=\"icons\">\n              <TiEdit\n                onClick={() => setEdit({ id: todo.id, value: todo.text })}\n                className=\"edit-icon\"\n              />\n              <RiCloseCircleLine\n                onClick={() => removeTodo(todo.id)}\n                className=\"delete-icon\"\n              />\n            </div>\n          </div>\n        ))\n      )}\n    </>\n  );\n}\n\nexport default Todo;\n","export const LOCAL_STORAGE_KEY = \"react-do-list-todos\";","import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { LOCAL_STORAGE_KEY } from \"../constants\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n  const validateinput = (todo) => !todo || /^\\s*$/.test(todo);\n\n  const addTodo = (todo) => {\n    if (validateinput(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (validateinput(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    setTodos((todo) => todo.filter((t) => t.id !== id));\n  };\n  const completeTodo = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const deleteAll = () => {\n    setTodos([]);\n  };\n\n  return (\n    <div className=\"todo-context\">\n      <h1>To-Do List</h1>\n      <TodoForm onSubmit={addTodo} />\n      <div className=\"todo-list\">\n        <Todo\n          todos={todos}\n          completeTodo={completeTodo}\n          removeTodo={removeTodo}\n          updateTodo={updateTodo}\n        />\n      </div>\n      {todos.length ? (\n        <button className=\"todo-button\" onClick={deleteAll}>\n          Reset Tasks\n        </button>\n      ) : null}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}